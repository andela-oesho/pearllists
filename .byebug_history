exit
decoded_auth_token["user_id"]
id: 2, name: "delname", email: "pop
decoded_auth_token[:user_id]
User.find(2)
User.all
decoded_auth_token
@current_user
current_user
exit
@decoded_auth_token
auth_token
exit
auth_token
AuthToken.decode(auth_token)
@deoded_auth_token
auth_token
exit
auth_token
request.headers['Authorization'].present?
exit
request.headers['Authorization'].present?
request.headers['Authorization']
request.headers['Authorization'].present?
exit
request.headers['Authorization'].present?
auth_token
exit
request.headers
request
request.headers['Authorization'].present?
auth_token
exit
User.all
exit
session
sessions
session
user
